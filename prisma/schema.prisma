generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  username   String @unique
  password   String
  first_name String
  last_name  String
  telephone  String
  role       String

  hashedRtx    String
  user_address UserAddress?

  createdAt     DateTime      @default(now())
  modifiedAt    DateTime      @updatedAt
  shopping_cart ShoppingCart?
  orders        Order[]

  @@map("users")
}

model UserAddress {
  id Int @id @default(autoincrement())

  address_line1 String @db.VarChar(255)
  address_line2 String @db.VarChar(255)
  city          String
  postal_code   String
  country       String
  telephone     String
  mobile        String

  user_id Int  @unique
  user    User @relation(fields: [user_id], references: [id])
}

model Product {
  id Int @id @default(autoincrement())

  name     String
  desc     String
  SKU      String
  price    Decimal
  quantity Int
  image    String
  in_stock Boolean

  category_id      Int
  product_category Category @relation(fields: [category_id], references: [id])

  discount_by Int
  discount    Discount @relation(fields: [discount_by], references: [id])

  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt
  deleted_at  DateTime @default(now())

  // indexes
  @@index([name], name: "product_name")
  @@map("products")
}

model Discount {
  id Int @id @default(autoincrement())

  name             String
  desc             String
  discount_percent Decimal
  active           Boolean

  products Product[]

  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt
  deleted_at  DateTime @default(now())

  @@map("discounts")
}

model Category {
  id Int @id @default(autoincrement())

  name String
  desc String

  products Product[]

  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt
  deleted_at  DateTime @default(now())
}

model ShoppingCart {
  id Int @id @default(autoincrement())

  user_id Int  @unique
  user    User @relation(fields: [user_id], references: [id])

  total_price Decimal @default(0)

  products Int[] @default([])

  order Order?

  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt
  deleted_at  DateTime @default(now())
}

model Order {
  id Int @id @default(autoincrement())

  total_price Decimal

  user_id Int
  user    User @relation(fields: [user_id], references: [id])

  shopping_cart_id Int          @unique
  shopping_cart    ShoppingCart @relation(fields: [shopping_cart_id], references: [id])

  created_at DateTime @default(now())
  modifie_at DateTime @updatedAt
  deleted_at DateTime @default(now())

  @@map("orders")
}
