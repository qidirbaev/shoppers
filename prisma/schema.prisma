generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int              @id @default(autoincrement())
  username         String           @unique
  password         String
  first_name       String
  last_name        String
  telephone        String
  createdAt        DateTime         @default(now())
  modifiedAt       DateTime         @updatedAt
  hashedRtx        String
  order_details_id OrderDetails?
  shopping_session ShoppingSession?
  user_address     UserAddress[]
  user_payment     UserPayments[]

  @@map("users")
}

model UserAddress {
  id            Int    @id @default(autoincrement())
  user_id       Int
  address_line1 String @db.VarChar(255)
  address_line2 String @db.VarChar(255)
  city          String
  postal_code   String
  country       String
  telephone     String
  mobile        String
  user          User   @relation(fields: [user_id], references: [id])
}

model UserPayments {
  id           Int      @id @default(autoincrement())
  user_id      Int
  payment_type String
  provider     String
  account_no   Int
  expiry_date  DateTime
  user         User     @relation(fields: [user_id], references: [id])
}

model ShoppingSession {
  id          Int       @id @default(autoincrement())
  user_id     Int       @unique
  total       Decimal
  created_at  DateTime  @default(now())
  modified_at DateTime  @updatedAt
  user        User      @relation(fields: [user_id], references: [id])
  cart_item   CartItem?
}

model CartItem {
  id          Int             @id @default(autoincrement())
  session_id  Int             @unique
  product_id  Int             @unique
  quantity    Int
  created_at  DateTime        @default(now())
  modified_at DateTime        @updatedAt
  product     Product         @relation(fields: [product_id], references: [id])
  session     ShoppingSession @relation(fields: [session_id], references: [id])
}

model Product {
  id               Int               @id @default(autoincrement())
  name             String
  descr            String
  SKU              String
  discount_id      Int
  category_id      Int
  price            Decimal
  created_at       DateTime          @default(now())
  modified_at      DateTime          @updatedAt
  deleted_at       DateTime          @default(now())
  product_category ProductCategory   @relation(fields: [category_id], references: [id])
  discount         Discount          @relation(fields: [discount_id], references: [id])
  cart_item        CartItem?
  order_items      OrderItems?
  inventory_id     ProductInventory?
}

model OrderDetails {
  id          Int             @id @default(autoincrement())
  user_id     Int             @unique
  total       Decimal
  created_at  DateTime        @default(now())
  modified_at DateTime        @updatedAt
  user        User            @relation(fields: [user_id], references: [id])
  order_items OrderItems[]
  payment_id  PaymentDetails?
}

model OrderItems {
  id               Int          @id @default(autoincrement())
  order_details_id Int
  product_id       Int          @unique
  quantity         Int
  created_at       DateTime     @default(now())
  modified_at      DateTime     @updatedAt
  order_details    OrderDetails @relation(fields: [order_details_id], references: [id])
  product          Product      @relation(fields: [product_id], references: [id])
}

model PaymentDetails {
  id               Int          @id @default(autoincrement())
  order_details_id Int          @unique
  order_id         Int
  amount           Decimal
  provider         String
  status           String
  created_at       DateTime     @default(now())
  modified_at      DateTime     @updatedAt
  order_details    OrderDetails @relation(fields: [order_details_id], references: [id])
}

model Discount {
  id               Int       @id @default(autoincrement())
  name             String
  desc             String
  discount_percent Decimal
  active           Boolean
  created_at       DateTime  @default(now())
  modified_at      DateTime  @updatedAt
  deleted_at       DateTime  @default(now())
  products         Product[]
}

model ProductInventory {
  id          Int      @id @default(autoincrement())
  quantity    Int
  product_id  Int      @unique
  created_at  DateTime @default(now())
  modified_at DateTime @updatedAt
  deleted_at  DateTime @default(now())
  product     Product  @relation(fields: [product_id], references: [id])
}

model ProductCategory {
  id          Int       @id @default(autoincrement())
  name        String
  desc        String
  created_at  DateTime  @default(now())
  modified_at DateTime  @updatedAt
  deleted_at  DateTime  @default(now())
  products    Product[]
}
